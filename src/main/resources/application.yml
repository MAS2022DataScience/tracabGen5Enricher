topic:
  tracab-01:
    name: tracabgen5_02_filter
    replication-factor: 2
    partitions: 3
  tracab-02:
    name: tracabgen5_03_enriched
    replication-factor: 2
    partitions: 3

maxima:
  #v_max= velocity world record holder Arjen Robben with 37 km/h (10.277777778m/s)
  #http://www.deinfussballtrainer.de/top-10-die-schnellsten-fussballer-der-welt/
  velocity: 10.277777778

spring:
  application:
    name: "tracabgen5-enricher"

  kafka:
    bootstrap.servers:
      - ${DATAPLATFORM_IP}:9092
      - ${DATAPLATFORM_IP}:9093
    streams:
      application-id: ${spring.application.name}
      client-id: ${spring.application.name}-stream
      replication-factor: 2
      properties:
        #commit.interval.ms: 100
        #group-id: <group_id> #this shows up in KafkaStreamsConfiguration
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        # This is the default: log, fail and stop processing records (stop stream)
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
        #auto-offset-reset: latest
        #compression-type: lz4 #this shows up in KafkaStreamsConfiguration
        #state.cleanup.delay.ms: 600000
    properties:
      bootstrap.servers:
        - ${spring.kafka.bootstrap.servers[0]}
        - ${spring.kafka.bootstrap.servers[1]}
      schema.registry.url: "http://${DATAPLATFORM_IP}:8081"
    # At application startup a missing topic on the broker will not fail the
    # application startup
    listener:
      missing-topics-fatal: false
